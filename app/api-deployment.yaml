apiVersion: v1
kind: Namespace
metadata: 
  name: flask-api-ns

---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: data-api
  name: data-api
  namespace: flask-api-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: data-api
  template:
    metadata:
      labels:
        k8s-app: data-api
    spec:
      containers:
      - name: data-api
        image: flask-api:test
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8083
        # args:
        #     - --apiserver-host=http://my-api:30333


---
# apiVersion: v1
# kind: Service
# metadata:
#   name: data-api-svc
# spec:
#   selector:
#     app: data-api
#   ports:
#   - port: 80
#     targetPort: 8083
#     nodePort: 30333
  # externalIPs:
  #   - 192.168.137.67


apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2020-03-03T13:00:02Z"
  labels:
    k8s-app: data-api
  name: api-svc
  namespace: flask-api-ns
  resourceVersion: "8946"
  selfLink: /api/v1/namespaces/flask-api-ns/services/api-svc
  uid: a15edddf-56a9-4ab3-ade3-d9973d4d1cce
spec:
  clusterIP: 10.96.164.41
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: 30106
    port: 8083
    protocol: TCP
    targetPort: 8083
  selector:
    k8s-app: data-api
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer: {}

# ---
# apiVersion: v1
# kind: Ingress
# metadata: 
#   name: data-api-ingress
# spec:
#   rules: 
#   - host: data-api.example.com
#     http:
#       paths:
#       - backend:
#         serviceName: data-api-svc
#         servicePort: 80